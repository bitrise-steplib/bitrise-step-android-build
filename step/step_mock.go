package step

import (
	"time"

	"github.com/bitrise-io/go-android/gradle"
	"github.com/stretchr/testify/mock"
)

// MockGradleProjectWrapper is an autogenerated mock type for the GradleProjectWrapper type
type MockGradleProjectWrapper struct {
	mock.Mock
}

// FindArtifacts provides a mock function with given fields: generatedAfter, pattern, includeModuleInName
func (_m *MockGradleProjectWrapper) FindArtifacts(generatedAfter time.Time, pattern string, includeModuleInName bool) ([]gradle.Artifact, error) {
	ret := _m.Called(generatedAfter, pattern, includeModuleInName)

	var r0 []gradle.Artifact
	if rf, ok := ret.Get(0).(func(time.Time, string, bool) []gradle.Artifact); ok {
		r0 = rf(generatedAfter, pattern, includeModuleInName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]gradle.Artifact)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(time.Time, string, bool) error); ok {
		r1 = rf(generatedAfter, pattern, includeModuleInName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
